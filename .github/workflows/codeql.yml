name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '20 19 * * 1'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-22.04
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: c-cpp
            build-mode: manual
          - language: python
            build-mode: none

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up workspace
        run: |
          mkdir -p ~/nav2_ws/src
          mv $GITHUB_WORKSPACE/* ~/nav2_ws/src/ || true # Move repo to workspace
          cd ~/nav2_ws

      - name: Install ROS 2 Iron and dependencies
        run: |
          sudo apt update
          sudo apt install -y software-properties-common curl gnupg2 lsb-release
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
          sudo apt update
          sudo apt install -y ros-iron-desktop python3-colcon-common-extensions python3-rosdep python3-vcstool cmake build-essential

      - name: Initialize rosdep
        run: |
          sudo rosdep init || true
          rosdep update

      - name: Install NAV2 dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            libceres-dev \
            libgraphicsmagick++1-dev \
            graphicsmagick-libmagick-dev-compat \
            lcov \
            python3-zmq \
            python3-typeshed \
            libomp-dev || { echo "Failed to install dependencies"; exit 1; }

      - name: Resolve ROS dependencies
        run: |
          source /opt/ros/iron/setup.bash
          rosdep install --from-paths ~/nav2_ws/src --ignore-src -r -y || { echo "rosdep install failed"; exit 1; }

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      - name: Manual Build (for C/C++)
        if: matrix.build-mode == 'manual'
        run: |
          source /opt/ros/iron/setup.bash
          cd ~/nav2_ws
          colcon build --symlink-install || { echo "colcon build failed"; exit 1; }

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
